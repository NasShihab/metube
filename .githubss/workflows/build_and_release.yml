on:
  push:
    branches:
      - master

name: Build Metube
jobs:
  delete-previous-releases:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Release ID by Tag
        id: get_release_by_tag
        run: |
          # Fetch the release ID based on the provided tag
          TAG_TO_DELETE=v0.0.1 # Replace with the tag you want to delete
          RELEASE_ID=$(curl -s -X GET \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_TO_DELETE \
            | jq -r '.id')
          echo "Release ID for tag $TAG_TO_DELETE: $RELEASE_ID"
          echo "::set-output name=release_id::$RELEASE_ID"
      - name: Delete Release
        if: steps.get_release_by_tag.outputs.release_id != 'null' # Check if the release with the tag exists
        run: |
          # Delete the release using the fetched release ID
          RELEASE_ID=${{ steps.get_release_by_tag.outputs.release_id }}
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID
          echo "Release with tag $TAG_TO_DELETE deleted."

  build:
    name: Build and Release new apk
    runs-on: ubuntu-latest
    needs: delete-previous-releases
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: flutter build apk --release --split-per-abi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v0.0.1
          release_name: Release v0.0.1
          body: 'Release of version v0.0.1'
          draft: false
          prerelease: false

      - name: Upload APK
        id: upload_apk
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
